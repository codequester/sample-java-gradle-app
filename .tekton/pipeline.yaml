---
# Tekton Pipeline for Gradle Spring Boot Application
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: app-pl
spec:
  workspaces:
    - name: output #shared-data  # Shared workspace for passing artifacts between tasks
  params:
    - name: git-url
      description: The git url to clone from
    - name: branch
      description: The branch name to clone from    
  tasks:
    # Task 1: Checkout code from GitHub
    - name: git-clone
      taskRef:
        name: git-clone
      params:
        - name: url
          value: "$(params.git-url)"
        - name: branch
          value: $(params.branch)
      workspaces:
        - name: appsrc
          workspace: output

    # Task 2: Build the Spring Boot application using Gradle
    - name: gradle-build
      taskRef:
        name: gradle-build-task
      workspaces:
        - name: appsrc
          workspace: output
      runAfter:
        - git-clone          

    # Task 3: Build and Push the Docker image
    - name: build-push
      taskRef:
        name: buildah
      workspaces:
        - name: source
          workspace: output
      runAfter:
        - gradle-build     

    # Task 4: Deploy image
    - name: deploy-image
      taskRef:
        name: helm-install-task
      params:
        - name: release-name
          value: "sample-java-gradle-app"   
      workspaces:
        - name: chart-workspace
          workspace: output
      runAfter:
        - build-push              
    # - name: deploy-image
    #   taskRef:
    #     name: deploy-image-task
    #   params:
    #     - name: appname
    #       value: "sample-java-gradle-app"
    #     - name: image
    #       value: "docker.io/shankar29/sample-java-gradle-app:latest"
    #     - name: namespace
    #       value: "sample-app"
    #     - name: container-port
    #       value: "8081"